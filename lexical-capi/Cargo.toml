[package]
authors = ["Alex Huszagh <ahuszagh@gmail.com>"]
autobenches = false
categories = ["parsing", "encoding", "no-std", "value-formatting"]
description = "A C-API for rust-lexical."
documentation = "https://docs.rs/lexical-capi"
edition = "2018"
keywords = ["parsing", "lexical", "encoding", "no_std"]
license = "MIT/Apache-2.0"
name = "lexical-capi"
# Since we don't have a Rust API, there's no reason to publish it to crates.io.
publish = false
readme = "README.md"
repository = "https://github.com/Alexhuszagh/rust-lexical/tree/master/lexical-capi"
version = "0.7.4"

[lib]
crate-type = ["cdylib", "staticlib"]

[badges]
travis-ci = { repository = "Alexhuszagh/rust-lexical" }

[dependencies]
cfg-if = "1.0"

[dependencies.lexical-core]
path = "../lexical-core"
default-features = false
features = []
version = "^0.8.0"

[features]
default = ["no_alloc", "ryu", "std"]

# FEATURES
# --------
# Add support for i128 and u128, which are not FFI-stable.
i128 = []
# Do not use the system allocator, if possible.
# Note that setting will be overriden for f128 and radix with atof.
no_alloc = ["lexical-core/no_alloc"]
# Add support for different float string formats.
format = ["lexical-core/format"]
# Use the optimized Grisu3 implementation from dtoa (not recommended).
grisu3 = ["lexical-core/grisu3"]
# Add support for parsing and writing power-of-two float and integer strings.
binary = ["lexical-core/binary"]
# Add support for parsing and writing non-decimal float and integer strings.
radix = ["lexical-core/radix"]
# Allow custom rounding schemes, at the cost of slower performance.
rounding = ["lexical-core/rounding"]
# Use the optimized Ryu implementation.
ryu = ["lexical-core/ryu"]
# Use the `std` library.
std = ["lexical-core/std"]

# Use heavy optimizations for release builds, and make our panics to detect
# internal logic errors safe for FFI, via abort.
[profile.dev]
opt-level = 0
debug = true
lto = false
panic = 'abort'

[profile.release]
opt-level = 3
debug = false
debug-assertions = false
lto = true
panic = 'abort'
