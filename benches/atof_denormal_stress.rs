//! Sample data invoking the worst-case scenario.

#[macro_use]
extern crate bencher;
extern crate lexical;

use bencher::{black_box, Bencher};
use lexical::atof::*;

// F64

// Rust fails to parse this, so we need to use it only with Lexical.
const F64_DATA: [&'static str; 12] = [
    // Force the slow algorithm.
    "2.47032822e-324",
    "2.470328229206232720e-324",
    "2.4703282292062327208828439643e-324",
    "2.47032822920623272088284396434110686182e-324",
    "2.470328229206232720882843964341106861825299013071e-324",
    "2.47032822920623272088284396434110686182529901307162382212792841250337753635104375932649918180817996e-324",
    "2.470328229206232720882843964341106861825299013071623822127928412503377536351043759326499181808179961898982823477228588654633283551779698981993873980053909390631503565951557022639229085839244910518443e-324",
    "2.47032822920623272088284396434110686182529901307162382212792841250337753635104375932649918180817996189898282347722858865463328355177969898199387398005390939063150356595155702263922908583924491051844359318028499365361525003193704576782492193656236698636584807570015857692699037063119282795585513329278343384093519780155312465972635795746227664652728272200563740064854999770965994704540208281662262378e-324",
    "2.470328229206232720882843964341106861825299013071623822127928412503377536351043759326499181808179961898982823477228588654633283551779698981993873980053909390631503565951557022639229085839244910518443593180284993653615250031937045767824921936562366986365848075700158576926990370631192827955855133292783433840935197801553124659726357957462276646527282722005637400648549997709659947045402082816622623785739345073633900796776193057750674017632467360096895134053553745851666113422376667860416215968046191446729184030053005753084904876539171138659164623952491262365388187963623937328042389101867234849766823508986338858792562830275599565752445550725518931369083625477918694866799496832404970582102851318545139621383772282614543769341253209859132766723632812500000000000000000000000000000000000000000000001e-324",
    "2.47032822920623272088284396434110686182529901307162382212792841250337753635104375932649918180817996189898282347722858865463328355177969898199387398005390939063150356595155702263922908583924491051844359318028499365361525003193704576782492193656236698636584807570015857692699037063119282795585513329278343384093519780155312465972635795746227664652728272200563740064854999770965994704540208281662262378573934507363390079677619305775067401763246736009689513405355374585166611342237666786041621596804619144672918403005300575308490487653917113865916462395249126236538818796362393732804238910186723484976682350898633885879256283027559956575244555072551893136908362547791869486679949683240497058210285131854513962138377228261454376934125320985913276672363281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e-324",
    "2.470328229206232720882843964341106861825299013071623822127928412503377536351043759326499181808179961898982823477228588654633283551779698981993873980053909390631503565951557022639229085839244910518443593180284993653615250031937045767824921936562366986365848075700158576926990370631192827955855133292783433840935197801553124659726357957462276646527282722005637400648549997709659947045402082816622623785739345073633900796776193057750674017632467360096895134053553745851666113422376667860416215968046191446729184030053005753084904876539171138659164623952491262365388187963623937328042389101867234849766823508986338858792562830275599565752445550725518931369083625477918694866799496832404970582102851318545139621383772282614543769341253209859132766723632812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e-324",
    "2.47032822920623272088284396434110686182529901307162382212792841250337753635104375932649918180817996189898282347722858865463328355177969898199387398005390939063150356595155702263922908583924491051844359318028499365361525003193704576782492193656236698636584807570015857692699037063119282795585513329278343384093519780155312465972635795746227664652728272200563740064854999770965994704540208281662262378573934507363390079677619305775067401763246736009689513405355374585166611342237666786041621596804619144672918403005300575308490487653917113865916462395249126236538818796362393732804238910186723484976682350898633885879256283027559956575244555072551893136908362547791869486679949683240497058210285131854513962138377228261454376934125320985913276672363281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e-324",
];

fn atof_denormal_stress_f64_lexical(bench: &mut Bencher) {
    bench.iter(|| { F64_DATA.iter().for_each(|x| { black_box(atof64_bytes(10, x.as_bytes())); } ) })
}

fn atof_denormal_stress_f64_lexical_lossy(bench: &mut Bencher) {
    bench.iter(|| { F64_DATA.iter().for_each(|x| { black_box(atof64_lossy_bytes(10, x.as_bytes())); } ) })
}

// LEXICAL SPECIFIC SIZES

fn atof_denormal_stress_f64_lexical_10(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[0].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_20(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[1].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_30(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[2].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_40(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[3].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_50(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[4].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_100(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[5].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_200(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[6].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_400(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[7].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_800(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[8].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_1600(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[9].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_3200(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[10].as_bytes())); })
}

fn atof_denormal_stress_f64_lexical_6400(bench: &mut Bencher) {
    bench.iter(|| { black_box(atof64_bytes(10, F64_DATA[11].as_bytes())); })
}

// PARSE SPECIFIC SIZES

fn atof_denormal_stress_f64_parse_10(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[0].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_20(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[1].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_30(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[2].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_40(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[3].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_50(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[4].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_100(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[5].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_200(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[6].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_400(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[7].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_800(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[8].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_1600(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[9].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_3200(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[10].parse::<f64>().unwrap()); })
}

fn atof_denormal_stress_f64_parse_6400(bench: &mut Bencher) {
    bench.iter(|| { black_box(F64_DATA[11].parse::<f64>().unwrap()); })
}

benchmark_group!(f64_benches, atof_denormal_stress_f64_lexical, atof_denormal_stress_f64_lexical_lossy);
benchmark_group!(f64_lexical_size_benches, atof_denormal_stress_f64_lexical_10, atof_denormal_stress_f64_lexical_20, atof_denormal_stress_f64_lexical_30, atof_denormal_stress_f64_lexical_40, atof_denormal_stress_f64_lexical_50, atof_denormal_stress_f64_lexical_100, atof_denormal_stress_f64_lexical_200, atof_denormal_stress_f64_lexical_400, atof_denormal_stress_f64_lexical_800, atof_denormal_stress_f64_lexical_1600, atof_denormal_stress_f64_lexical_3200, atof_denormal_stress_f64_lexical_6400);
benchmark_group!(f64_parse_size_benches, atof_denormal_stress_f64_parse_10, atof_denormal_stress_f64_parse_20, atof_denormal_stress_f64_parse_30, atof_denormal_stress_f64_parse_40, atof_denormal_stress_f64_parse_50, atof_denormal_stress_f64_parse_100, atof_denormal_stress_f64_parse_200, atof_denormal_stress_f64_parse_400, atof_denormal_stress_f64_parse_800, atof_denormal_stress_f64_parse_1600, atof_denormal_stress_f64_parse_3200, atof_denormal_stress_f64_parse_6400);
benchmark_main!(f64_benches, f64_lexical_size_benches, f64_parse_size_benches);
