# Travis configurations are partially derived from trust.
# See ci/README.md for license information.

dist: xenial
language: rust
services: docker
sudo: required

matrix:
  include:
    # Environment variables:
    # ----------------------
    #   `NO_FEATURES` - Do not test all permutations of features.
    #         Only enable all features on stable and specific-version checks.
    #   `DISABLE_TESTS` - Disable all dev builds, including tests and benchmarks.
    #   `DISABLE_BENCHES` - Do not compile benchmarks. Benchmarks are never run.
    #         Also disables tests.
    #   `NO_STD` - Do not use the std library. Also disables tests and benchmarks.
    #   `NIGHTLY` - Use nightly-only features.
    - rust: stable
      env: TARGET=x86_64-unknown-linux-gnu

    # For compile-time reasons, disable benches on all besides rust/stable.
    - rust: beta
      env: TARGET=x86_64-unknown-linux-gnu DISABLE_BENCHES=1 NO_FEATURES=1

    - rust: stable
      env: TARGET=x86_64-unknown-linux-gnu NO_STD=1 DISABLE_BENCHES=1 NO_FEATURES=1

    - rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu NO_STD=1 DISABLE_BENCHES=1 NO_FEATURES=1

    # Minimum supported version
    - rust: 1.51.0
      env: TARGET=x86_64-unknown-linux-gnu DISABLE_BENCHES=1

    # Android
    - env: TARGET=aarch64-linux-android DISABLE_TESTS=1 NO_FEATURES=1
    - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1 NO_FEATURES=1
    - env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1 NO_FEATURES=1
    - env: TARGET=i686-linux-android DISABLE_TESTS=1 NO_FEATURES=1
    - env: TARGET=x86_64-linux-android DISABLE_TESTS=1 NO_FEATURES=1

    # iOS
    - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1 NO_FEATURES=1
      os: osx
    - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1 NO_FEATURES=1
      os: osx

    # Linux
    # All of the following fail to compile benches due to an issue
    # with the binary format (ELF) and relocations in the bench binary.
    # Every test, except for i686-unknown-linux-musl, fails on the benches.
    - env: TARGET=aarch64-unknown-linux-gnu DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=arm-unknown-linux-gnueabi DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=armv7-unknown-linux-gnueabihf DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=i686-unknown-linux-gnu DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=i686-unknown-linux-musl NO_FEATURES=1
    - env: TARGET=mips-unknown-linux-gnu DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=mips64-unknown-linux-gnuabi64 DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=mips64el-unknown-linux-gnuabi64 DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=mipsel-unknown-linux-gnu DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=powerpc-unknown-linux-gnu DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=powerpc64-unknown-linux-gnu DISABLE_TESTS=1 NO_FEATURES=1
    - env: TARGET=powerpc64le-unknown-linux-gnu DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1 NO_FEATURES=1
    - env: TARGET=x86_64-unknown-linux-gnu DISABLE_BENCHES=1 NO_FEATURES=1
    - env: TARGET=x86_64-unknown-linux-musl DISABLE_BENCHES=1 NO_FEATURES=1

    # OSX
    - env: TARGET=x86_64-apple-darwin NO_FEATURES=1
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1 NO_FEATURES=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1 NO_FEATURES=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1 NO_FEATURES=1

    # Windows
    # Benches fail since the following option is not recognized:
    #   '--enable-long-section-names'
    - env: TARGET=x86_64-pc-windows-gnu DISABLE_BENCHES=1 NO_FEATURES=1

    - rust: nightly
      os: windows
      install:
      script: DISABLE_CROSS=1 NO_FEATURES=1 bash ci/test.sh

  allow_failures:
    - rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  # Install rust target and source the correct environment.
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/test.sh

after_script: set +e
