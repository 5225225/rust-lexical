//! Cached tables for precalculated values for non-decimal strings.

#![cfg(feature = "radix")]

use static_assertions::const_assert;

// F32
// ---

pub(super) const F32_POW3: [f32; 16] = [
    1.0, 3.0, 9.0, 27.0, 81.0, 243.0, 729.0, 2187.0, 6561.0, 19683.0, 59049.0, 177147.0, 531441.0,
    1594323.0, 4782969.0, 14348907.0,
];
pub(super) const F32_POW5: [f32; 11] =
    [1.0, 5.0, 25.0, 125.0, 625.0, 3125.0, 15625.0, 78125.0, 390625.0, 1953125.0, 9765625.0];
pub(super) const F32_POW6: [f32; 16] = [
    1.0,
    6.0,
    36.0,
    216.0,
    1296.0,
    7776.0,
    46656.0,
    279936.0,
    1679616.0,
    10077696.0,
    60466176.0,
    362797056.0,
    2176782336.0,
    13060694016.0,
    78364164096.0,
    470184984576.0,
];
pub(super) const F32_POW7: [f32; 9] =
    [1.0, 7.0, 49.0, 343.0, 2401.0, 16807.0, 117649.0, 823543.0, 5764801.0];
pub(super) const F32_POW9: [f32; 8] = [1.0, 9.0, 81.0, 729.0, 6561.0, 59049.0, 531441.0, 4782969.0];
pub(super) const F32_POW11: [f32; 7] = [1.0, 11.0, 121.0, 1331.0, 14641.0, 161051.0, 1771561.0];
pub(super) const F32_POW12: [f32; 16] = [
    1.0,
    12.0,
    144.0,
    1728.0,
    20736.0,
    248832.0,
    2985984.0,
    35831808.0,
    429981696.0,
    5159780352.0,
    61917364224.0,
    743008370688.0,
    8916100448256.0,
    106993205379072.0,
    1283918464548864.0,
    15407021574586368.0,
];
pub(super) const F32_POW13: [f32; 7] = [1.0, 13.0, 169.0, 2197.0, 28561.0, 371293.0, 4826809.0];
pub(super) const F32_POW14: [f32; 9] =
    [1.0, 14.0, 196.0, 2744.0, 38416.0, 537824.0, 7529536.0, 105413504.0, 1475789056.0];
pub(super) const F32_POW15: [f32; 7] = [1.0, 15.0, 225.0, 3375.0, 50625.0, 759375.0, 11390625.0];
pub(super) const F32_POW17: [f32; 6] = [1.0, 17.0, 289.0, 4913.0, 83521.0, 1419857.0];
pub(super) const F32_POW18: [f32; 8] =
    [1.0, 18.0, 324.0, 5832.0, 104976.0, 1889568.0, 34012224.0, 612220032.0];
pub(super) const F32_POW19: [f32; 6] = [1.0, 19.0, 361.0, 6859.0, 130321.0, 2476099.0];
pub(super) const F32_POW20: [f32; 11] = [
    1.0,
    20.0,
    400.0,
    8000.0,
    160000.0,
    3200000.0,
    64000000.0,
    1280000000.0,
    25600000000.0,
    512000000000.0,
    10240000000000.0,
];
pub(super) const F32_POW21: [f32; 6] = [1.0, 21.0, 441.0, 9261.0, 194481.0, 4084101.0];
pub(super) const F32_POW22: [f32; 7] =
    [1.0, 22.0, 484.0, 10648.0, 234256.0, 5153632.0, 113379904.0];
pub(super) const F32_POW23: [f32; 6] = [1.0, 23.0, 529.0, 12167.0, 279841.0, 6436343.0];
pub(super) const F32_POW24: [f32; 16] = [
    1.0,
    24.0,
    576.0,
    13824.0,
    331776.0,
    7962624.0,
    191102976.0,
    4586471424.0,
    110075314176.0,
    2641807540224.0,
    63403380965376.0,
    1521681143169024.0,
    36520347436056576.0,
    876488338465357824.0,
    21035720123168587776.0,
    504857282956046106624.0,
];
pub(super) const F32_POW25: [f32; 6] = [1.0, 25.0, 625.0, 15625.0, 390625.0, 9765625.0];
pub(super) const F32_POW26: [f32; 7] =
    [1.0, 26.0, 676.0, 17576.0, 456976.0, 11881376.0, 308915776.0];
pub(super) const F32_POW27: [f32; 6] = [1.0, 27.0, 729.0, 19683.0, 531441.0, 14348907.0];
pub(super) const F32_POW28: [f32; 9] =
    [1.0, 28.0, 784.0, 21952.0, 614656.0, 17210368.0, 481890304.0, 13492928512.0, 377801998336.0];
pub(super) const F32_POW29: [f32; 5] = [1.0, 29.0, 841.0, 24389.0, 707281.0];
pub(super) const F32_POW30: [f32; 7] =
    [1.0, 30.0, 900.0, 27000.0, 810000.0, 24300000.0, 729000000.0];
pub(super) const F32_POW31: [f32; 5] = [1.0, 31.0, 961.0, 29791.0, 923521.0];
pub(super) const F32_POW33: [f32; 5] = [1.0, 33.0, 1089.0, 35937.0, 1185921.0];
pub(super) const F32_POW34: [f32; 6] = [1.0, 34.0, 1156.0, 39304.0, 1336336.0, 45435424.0];
pub(super) const F32_POW35: [f32; 5] = [1.0, 35.0, 1225.0, 42875.0, 1500625.0];
pub(super) const F32_POW36: [f32; 8] =
    [1.0, 36.0, 1296.0, 46656.0, 1679616.0, 60466176.0, 2176782336.0, 78364164096.0];

const_assert!(F32_POW3[1] / F32_POW3[0] == 3.0);
const_assert!(F32_POW5[1] / F32_POW5[0] == 5.0);
const_assert!(F32_POW6[1] / F32_POW6[0] == 6.0);
const_assert!(F32_POW7[1] / F32_POW7[0] == 7.0);
const_assert!(F32_POW9[1] / F32_POW9[0] == 9.0);
const_assert!(F32_POW11[1] / F32_POW11[0] == 11.0);
const_assert!(F32_POW12[1] / F32_POW12[0] == 12.0);
const_assert!(F32_POW13[1] / F32_POW13[0] == 13.0);
const_assert!(F32_POW14[1] / F32_POW14[0] == 14.0);
const_assert!(F32_POW15[1] / F32_POW15[0] == 15.0);
const_assert!(F32_POW17[1] / F32_POW17[0] == 17.0);
const_assert!(F32_POW18[1] / F32_POW18[0] == 18.0);
const_assert!(F32_POW19[1] / F32_POW19[0] == 19.0);
const_assert!(F32_POW20[1] / F32_POW20[0] == 20.0);
const_assert!(F32_POW21[1] / F32_POW21[0] == 21.0);
const_assert!(F32_POW22[1] / F32_POW22[0] == 22.0);
const_assert!(F32_POW23[1] / F32_POW23[0] == 23.0);
const_assert!(F32_POW24[1] / F32_POW24[0] == 24.0);
const_assert!(F32_POW25[1] / F32_POW25[0] == 25.0);
const_assert!(F32_POW26[1] / F32_POW26[0] == 26.0);
const_assert!(F32_POW27[1] / F32_POW27[0] == 27.0);
const_assert!(F32_POW28[1] / F32_POW28[0] == 28.0);
const_assert!(F32_POW29[1] / F32_POW29[0] == 29.0);
const_assert!(F32_POW30[1] / F32_POW30[0] == 30.0);
const_assert!(F32_POW31[1] / F32_POW31[0] == 31.0);
const_assert!(F32_POW33[1] / F32_POW33[0] == 33.0);
const_assert!(F32_POW34[1] / F32_POW34[0] == 34.0);
const_assert!(F32_POW35[1] / F32_POW35[0] == 35.0);
const_assert!(F32_POW36[1] / F32_POW36[0] == 36.0);

// F64
// ---

pub(super) const F64_POW3: [f64; 34] = [
    1.0,
    3.0,
    9.0,
    27.0,
    81.0,
    243.0,
    729.0,
    2187.0,
    6561.0,
    19683.0,
    59049.0,
    177147.0,
    531441.0,
    1594323.0,
    4782969.0,
    14348907.0,
    43046721.0,
    129140163.0,
    387420489.0,
    1162261467.0,
    3486784401.0,
    10460353203.0,
    31381059609.0,
    94143178827.0,
    282429536481.0,
    847288609443.0,
    2541865828329.0,
    7625597484987.0,
    22876792454961.0,
    68630377364883.0,
    205891132094649.0,
    617673396283947.0,
    1853020188851841.0,
    5559060566555523.0,
];
pub(super) const F64_POW5: [f64; 23] = [
    1.0,
    5.0,
    25.0,
    125.0,
    625.0,
    3125.0,
    15625.0,
    78125.0,
    390625.0,
    1953125.0,
    9765625.0,
    48828125.0,
    244140625.0,
    1220703125.0,
    6103515625.0,
    30517578125.0,
    152587890625.0,
    762939453125.0,
    3814697265625.0,
    19073486328125.0,
    95367431640625.0,
    476837158203125.0,
    2384185791015625.0,
];
pub(super) const F64_POW6: [f64; 34] = [
    1.0,
    6.0,
    36.0,
    216.0,
    1296.0,
    7776.0,
    46656.0,
    279936.0,
    1679616.0,
    10077696.0,
    60466176.0,
    362797056.0,
    2176782336.0,
    13060694016.0,
    78364164096.0,
    470184984576.0,
    2821109907456.0,
    16926659444736.0,
    101559956668416.0,
    609359740010496.0,
    3656158440062976.0,
    21936950640377856.0,
    131621703842267136.0,
    789730223053602816.0,
    4738381338321616896.0,
    28430288029929701376.0,
    170581728179578208256.0,
    1023490369077469249536.0,
    6140942214464815497216.0,
    36845653286788892983296.0,
    221073919720733357899776.0,
    1326443518324400147398656.0,
    7958661109946400884391936.0,
    47751966659678405306351616.0,
];
pub(super) const F64_POW7: [f64; 19] = [
    1.0,
    7.0,
    49.0,
    343.0,
    2401.0,
    16807.0,
    117649.0,
    823543.0,
    5764801.0,
    40353607.0,
    282475249.0,
    1977326743.0,
    13841287201.0,
    96889010407.0,
    678223072849.0,
    4747561509943.0,
    33232930569601.0,
    232630513987207.0,
    1628413597910449.0,
];
pub(super) const F64_POW9: [f64; 17] = [
    1.0,
    9.0,
    81.0,
    729.0,
    6561.0,
    59049.0,
    531441.0,
    4782969.0,
    43046721.0,
    387420489.0,
    3486784401.0,
    31381059609.0,
    282429536481.0,
    2541865828329.0,
    22876792454961.0,
    205891132094649.0,
    1853020188851841.0,
];
pub(super) const F64_POW11: [f64; 16] = [
    1.0,
    11.0,
    121.0,
    1331.0,
    14641.0,
    161051.0,
    1771561.0,
    19487171.0,
    214358881.0,
    2357947691.0,
    25937424601.0,
    285311670611.0,
    3138428376721.0,
    34522712143931.0,
    379749833583241.0,
    4177248169415651.0,
];
pub(super) const F64_POW12: [f64; 34] = [
    1.0,
    12.0,
    144.0,
    1728.0,
    20736.0,
    248832.0,
    2985984.0,
    35831808.0,
    429981696.0,
    5159780352.0,
    61917364224.0,
    743008370688.0,
    8916100448256.0,
    106993205379072.0,
    1283918464548864.0,
    15407021574586368.0,
    184884258895036416.0,
    2218611106740436992.0,
    26623333280885243904.0,
    319479999370622926848.0,
    3833759992447475122176.0,
    46005119909369701466112.0,
    552061438912436417593344.0,
    6624737266949237011120128.0,
    79496847203390844133441536.0,
    953962166440690129601298432.0,
    11447545997288281555215581184.0,
    137370551967459378662586974208.0,
    1648446623609512543951043690496.0,
    19781359483314150527412524285952.0,
    237376313799769806328950291431424.0,
    2848515765597237675947403497177088.0,
    34182189187166852111368841966125056.0,
    410186270246002225336426103593500672.0,
];
pub(super) const F64_POW13: [f64; 15] = [
    1.0,
    13.0,
    169.0,
    2197.0,
    28561.0,
    371293.0,
    4826809.0,
    62748517.0,
    815730721.0,
    10604499373.0,
    137858491849.0,
    1792160394037.0,
    23298085122481.0,
    302875106592253.0,
    3937376385699289.0,
];
pub(super) const F64_POW14: [f64; 19] = [
    1.0,
    14.0,
    196.0,
    2744.0,
    38416.0,
    537824.0,
    7529536.0,
    105413504.0,
    1475789056.0,
    20661046784.0,
    289254654976.0,
    4049565169664.0,
    56693912375296.0,
    793714773254144.0,
    11112006825558016.0,
    155568095557812224.0,
    2177953337809371136.0,
    30491346729331195904.0,
    426878854210636742656.0,
];
pub(super) const F64_POW15: [f64; 14] = [
    1.0,
    15.0,
    225.0,
    3375.0,
    50625.0,
    759375.0,
    11390625.0,
    170859375.0,
    2562890625.0,
    38443359375.0,
    576650390625.0,
    8649755859375.0,
    129746337890625.0,
    1946195068359375.0,
];
pub(super) const F64_POW17: [f64; 13] = [
    1.0,
    17.0,
    289.0,
    4913.0,
    83521.0,
    1419857.0,
    24137569.0,
    410338673.0,
    6975757441.0,
    118587876497.0,
    2015993900449.0,
    34271896307633.0,
    582622237229761.0,
];
pub(super) const F64_POW18: [f64; 17] = [
    1.0,
    18.0,
    324.0,
    5832.0,
    104976.0,
    1889568.0,
    34012224.0,
    612220032.0,
    11019960576.0,
    198359290368.0,
    3570467226624.0,
    64268410079232.0,
    1156831381426176.0,
    20822964865671168.0,
    374813367582081024.0,
    6746640616477458432.0,
    121439531096594251776.0,
];
pub(super) const F64_POW19: [f64; 13] = [
    1.0,
    19.0,
    361.0,
    6859.0,
    130321.0,
    2476099.0,
    47045881.0,
    893871739.0,
    16983563041.0,
    322687697779.0,
    6131066257801.0,
    116490258898219.0,
    2213314919066161.0,
];
pub(super) const F64_POW20: [f64; 23] = [
    1.0,
    20.0,
    400.0,
    8000.0,
    160000.0,
    3200000.0,
    64000000.0,
    1280000000.0,
    25600000000.0,
    512000000000.0,
    10240000000000.0,
    204800000000000.0,
    4096000000000000.0,
    81920000000000000.0,
    1638400000000000000.0,
    32768000000000000000.0,
    655360000000000000000.0,
    13107200000000000000000.0,
    262144000000000000000000.0,
    5242880000000000000000000.0,
    104857600000000000000000000.0,
    2097152000000000000000000000.0,
    41943040000000000000000000000.0,
];
pub(super) const F64_POW21: [f64; 13] = [
    1.0,
    21.0,
    441.0,
    9261.0,
    194481.0,
    4084101.0,
    85766121.0,
    1801088541.0,
    37822859361.0,
    794280046581.0,
    16679880978201.0,
    350277500542221.0,
    7355827511386641.0,
];
pub(super) const F64_POW22: [f64; 16] = [
    1.0,
    22.0,
    484.0,
    10648.0,
    234256.0,
    5153632.0,
    113379904.0,
    2494357888.0,
    54875873536.0,
    1207269217792.0,
    26559922791424.0,
    584318301411328.0,
    12855002631049216.0,
    282810057883082752.0,
    6221821273427820544.0,
    136880068015412051968.0,
];
pub(super) const F64_POW23: [f64; 12] = [
    1.0,
    23.0,
    529.0,
    12167.0,
    279841.0,
    6436343.0,
    148035889.0,
    3404825447.0,
    78310985281.0,
    1801152661463.0,
    41426511213649.0,
    952809757913927.0,
];
pub(super) const F64_POW24: [f64; 34] = [
    1.0,
    24.0,
    576.0,
    13824.0,
    331776.0,
    7962624.0,
    191102976.0,
    4586471424.0,
    110075314176.0,
    2641807540224.0,
    63403380965376.0,
    1521681143169024.0,
    36520347436056576.0,
    876488338465357824.0,
    21035720123168587776.0,
    504857282956046106624.0,
    12116574790945106558976.0,
    290797794982682557415424.0,
    6979147079584381377970176.0,
    167499529910025153071284224.0,
    4019988717840603673710821376.0,
    96479729228174488169059713024.0,
    2315513501476187716057433112576.0,
    55572324035428505185378394701824.0,
    1333735776850284124449081472843776.0,
    32009658644406818986777955348250624.0,
    768231807465763655682670928358014976.0,
    18437563379178327736384102280592359424.0,
    442501521100279865673218454734216626176.0,
    10620036506406716776157242913621199028224.0,
    254880876153761202627773829926908776677376.0,
    6117141027690268863066571918245810640257024.0,
    146811384664566452713597726037899455366168576.0,
    3523473231949594865126345424909586928788045824.0,
];
pub(super) const F64_POW25: [f64; 12] = [
    1.0,
    25.0,
    625.0,
    15625.0,
    390625.0,
    9765625.0,
    244140625.0,
    6103515625.0,
    152587890625.0,
    3814697265625.0,
    95367431640625.0,
    2384185791015625.0,
];
pub(super) const F64_POW26: [f64; 15] = [
    1.0,
    26.0,
    676.0,
    17576.0,
    456976.0,
    11881376.0,
    308915776.0,
    8031810176.0,
    208827064576.0,
    5429503678976.0,
    141167095653376.0,
    3670344486987776.0,
    95428956661682176.0,
    2481152873203736576.0,
    64509974703297150976.0,
];
pub(super) const F64_POW27: [f64; 12] = [
    1.0,
    27.0,
    729.0,
    19683.0,
    531441.0,
    14348907.0,
    387420489.0,
    10460353203.0,
    282429536481.0,
    7625597484987.0,
    205891132094649.0,
    5559060566555523.0,
];
pub(super) const F64_POW28: [f64; 19] = [
    1.0,
    28.0,
    784.0,
    21952.0,
    614656.0,
    17210368.0,
    481890304.0,
    13492928512.0,
    377801998336.0,
    10578455953408.0,
    296196766695424.0,
    8293509467471872.0,
    232218265089212416.0,
    6502111422497947648.0,
    182059119829942534144.0,
    5097655355238390956032.0,
    142734349946674946768896.0,
    3996561798506898509529088.0,
    111903730358193158266814464.0,
];
pub(super) const F64_POW29: [f64; 11] = [
    1.0,
    29.0,
    841.0,
    24389.0,
    707281.0,
    20511149.0,
    594823321.0,
    17249876309.0,
    500246412961.0,
    14507145975869.0,
    420707233300201.0,
];
pub(super) const F64_POW30: [f64; 14] = [
    1.0,
    30.0,
    900.0,
    27000.0,
    810000.0,
    24300000.0,
    729000000.0,
    21870000000.0,
    656100000000.0,
    19683000000000.0,
    590490000000000.0,
    17714700000000000.0,
    531441000000000000.0,
    15943230000000000000.0,
];
pub(super) const F64_POW31: [f64; 11] = [
    1.0,
    31.0,
    961.0,
    29791.0,
    923521.0,
    28629151.0,
    887503681.0,
    27512614111.0,
    852891037441.0,
    26439622160671.0,
    819628286980801.0,
];
pub(super) const F64_POW33: [f64; 11] = [
    1.0,
    33.0,
    1089.0,
    35937.0,
    1185921.0,
    39135393.0,
    1291467969.0,
    42618442977.0,
    1406408618241.0,
    46411484401953.0,
    1531578985264449.0,
];
pub(super) const F64_POW34: [f64; 13] = [
    1.0,
    34.0,
    1156.0,
    39304.0,
    1336336.0,
    45435424.0,
    1544804416.0,
    52523350144.0,
    1785793904896.0,
    60716992766464.0,
    2064377754059776.0,
    70188843638032384.0,
    2386420683693101056.0,
];
pub(super) const F64_POW35: [f64; 11] = [
    1.0,
    35.0,
    1225.0,
    42875.0,
    1500625.0,
    52521875.0,
    1838265625.0,
    64339296875.0,
    2251875390625.0,
    78815638671875.0,
    2758547353515625.0,
];
pub(super) const F64_POW36: [f64; 17] = [
    1.0,
    36.0,
    1296.0,
    46656.0,
    1679616.0,
    60466176.0,
    2176782336.0,
    78364164096.0,
    2821109907456.0,
    101559956668416.0,
    3656158440062976.0,
    131621703842267136.0,
    4738381338321616896.0,
    170581728179578208256.0,
    6140942214464815497216.0,
    221073919720733357899776.0,
    7958661109946400884391936.0,
];

const_assert!(F64_POW3[1] / F64_POW3[0] == 3.0);
const_assert!(F64_POW5[1] / F64_POW5[0] == 5.0);
const_assert!(F64_POW6[1] / F64_POW6[0] == 6.0);
const_assert!(F64_POW7[1] / F64_POW7[0] == 7.0);
const_assert!(F64_POW9[1] / F64_POW9[0] == 9.0);
const_assert!(F64_POW11[1] / F64_POW11[0] == 11.0);
const_assert!(F64_POW12[1] / F64_POW12[0] == 12.0);
const_assert!(F64_POW13[1] / F64_POW13[0] == 13.0);
const_assert!(F64_POW14[1] / F64_POW14[0] == 14.0);
const_assert!(F64_POW15[1] / F64_POW15[0] == 15.0);
const_assert!(F64_POW17[1] / F64_POW17[0] == 17.0);
const_assert!(F64_POW18[1] / F64_POW18[0] == 18.0);
const_assert!(F64_POW19[1] / F64_POW19[0] == 19.0);
const_assert!(F64_POW20[1] / F64_POW20[0] == 20.0);
const_assert!(F64_POW21[1] / F64_POW21[0] == 21.0);
const_assert!(F64_POW22[1] / F64_POW22[0] == 22.0);
const_assert!(F64_POW23[1] / F64_POW23[0] == 23.0);
const_assert!(F64_POW24[1] / F64_POW24[0] == 24.0);
const_assert!(F64_POW25[1] / F64_POW25[0] == 25.0);
const_assert!(F64_POW26[1] / F64_POW26[0] == 26.0);
const_assert!(F64_POW27[1] / F64_POW27[0] == 27.0);
const_assert!(F64_POW28[1] / F64_POW28[0] == 28.0);
const_assert!(F64_POW29[1] / F64_POW29[0] == 29.0);
const_assert!(F64_POW30[1] / F64_POW30[0] == 30.0);
const_assert!(F64_POW31[1] / F64_POW31[0] == 31.0);
const_assert!(F64_POW33[1] / F64_POW33[0] == 33.0);
const_assert!(F64_POW34[1] / F64_POW34[0] == 34.0);
const_assert!(F64_POW35[1] / F64_POW35[0] == 35.0);
const_assert!(F64_POW36[1] / F64_POW36[0] == 36.0);
